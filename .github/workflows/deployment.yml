name: Deployment
on:
  push:
    branches:
      - master
jobs:
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn install --frozen-lockfile

      - name: run lint
        run: yarn lint

  config_test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Check for vulnerabilities in Dockerfile
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          output: 'dockerfile-audit-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        if: always()
        with:
          sarif_file: 'dockerfile-audit-results.sarif'
  build:
    runs-on: ubuntu-latest
    needs: [unit_test, config_test]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Generate docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: justinzamora02/nodejs-demo-application
          tags: |
            type=sha,format=long,prefix=,suffix=
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to Docker Hub
        id: build
        uses: docker/build-push-action@v2
        with:
          # Build and push on master branch
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/justinzamora02/nodejs-demo-application:${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output: 'vulnerability-report.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        if: always()
        with:
          sarif_file: 'vulnerability-report.sarif'

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Create repository dispatch event
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh workflow run -R justinzamora02/gitops deployment \
            -f application=demo-app \
            -f environment=local \
            -f image_name=justinzamora02/nodejs-demo-application \
            -f image_tag=${{ github.sha }}
